# Importo los datos:
## Importo fecha: yearactual=anio del informe, mesactual=mes del informe
year_t <- as.numeric(read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "c4", col_names = FALSE))
wd <- "C:/Users/fiona/Dropbox/MGR"
# Importo los datos:
## Importo fecha: yearactual=anio del informe, mesactual=mes del informe
year_t <- as.numeric(read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "c4", col_names = FALSE))
mes_t <- as.numeric(read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "k4", col_names = FALSE))
mes_tm1 <- as.numeric(read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "j4", col_names = FALSE))
if(mes_t - mes_tm1 == 1){
year_tm1 <- year_t
} else if (mes_t - mes_tm1 == -11){
year_tm1 <- year_t-1
} else {
year_tm1 <- "ERROR EN EL ANIO DEL MES PREVIO"
}
year_tm12 <- year_t - 1
meses <- read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "r15:r26",
col_names = FALSE)
meses_anterior <- read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "s15:s26",
col_names = FALSE)
mes_t_abrev <- paste0(str_to_title(substr(meses[mes_t,1],1,3),"."))
text_mes_yoy <-  paste(mes_t_abrev,year_t,"/",mes_t_abrev,year_tm12)
## Importo el cuadro 1 IPCse
cuadro1 <- read_excel(paste0(wd,"/IPC seasonal adjustment/IPCse/IPCse.xlsx"),
sheet = "Cuadro1", range = "E47:L74",
na = "NA")
colnames1 <- colnames(cuadro1)
colnames1[1] <- " "
colnames(cuadro1) <- colnames1
## Importo los datos de la figura 4: tasa interanual q1-q5
figura4 <- read_excel(paste0(wd,"/IPC seasonal adjustment/Ponderadores/Tables/IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "B4:C2000")
# Importo datos cuadro 3 a
## Importo los datos del cuadro3a: tasas q1 a q5
cuadro3se <- read_excel(paste0(wd,"/IPC seasonal adjustment/Ponderadores/Tables/IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "G4:J9")
## Importo los datos del cuadro3b: tasas q1 a q5
cuadro4 <- read_excel(paste0(wd,"/IPC seasonal adjustment/Ponderadores/Tables/IPC por quintiles.xlsx"),
sheet = "Para R",
range = "E5:H10")
## Importo los datos del cuadro 4: diferencia incidencias q1-q5
cuadro_dif_inc_q1q5 <- read_excel(paste0(wd,"/IPC seasonal adjustment/Ponderadores/Tables/IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "N4:P17")
## Importo los datos de la figura 5 : tasas q1 a q5 ultimo año
figuraq1aq5year <- read_excel(paste0(wd,"/IPC seasonal adjustment/Ponderadores/Tables/IPC por quintiles.xlsx"),
sheet = "Para R",
range = "K5:M70")
# Figura 4: diferencia de inflacion interanual entre quintil 1 y quintil 5
colnames(figura4) <- c("Fecha","Serie")
figura4 <- figura4 %>%
na.omit() %>%
mutate(Serie=Serie*100) %>%
mutate_if(is.numeric, ~round(.,2))
# Cuadro 3: Inflacion por quintil
colnames(cuadro3se[,1]) <- " "
# Cuadro 3: Inflacion por quintil
colnames(cuadro4[,1]) <- " "
fgqy <- figuraq1aq5year %>%
mutate_if(is.numeric, ~round(.,2))
shapepath <- paste0(wd,"/Inflation Inequality/Data/Shapefiles/Regiones/ProvinciasGBA/AR_RegionesGBA.shp")
ar_regiones_gba <- st_read(shapepath)
# infineqpath <- paste0(wd, "/Inflation Inequality/Excels/Data inflation inequality.xlsx")
infineqpath <- paste0(wd, "/Inflation Inequality/Excels/Data inflation inequality - links funcionan.xlsx")
# Datos de desigualdad por ingresos
dataf9 <-  read_excel(infineqpath, sheet = "Para R", range = "B5:D4000")
dataf4 <-  read_excel(infineqpath, sheet = "Para R", range = "F5:H4000")
dataf5 <-  read_excel(infineqpath, sheet = "Para R", range = "J5:L4000")
# Datos de desigualdad geografica
dataf10f12 <- read_excel(infineqpath, sheet = "Para R", range = "Q5:S11")
dataf17 <- read_excel(infineqpath, sheet = "Para R", range = "U5:Y4000")
dataf19 <- read_excel(infineqpath, sheet = "Para R", range = "AA5:AF11")
# Cuadro simil cuadro 1 pero para deciles
cuadro1deciles <- read_excel(infineqpath, sheet = "Para R", range = "AI5:AL17")
colnames1 <- colnames(cuadro1deciles)
colnames1[1] <- " "
colnames(cuadro1deciles) <- colnames1
# editar el tooltip
tooltip_g4 <- paste0("La diferencia entre la tasa de inflación interanual entre el 20% con menores ingresos y el 20% con mayores ingresos es de ")
titulog4 <- paste0("Última observación: ", meses[mes_t,1], " ", year_t, ".\nLa diferencia en la inflación anual entre los quintiles 1 y 5 fue de ", sprintf("%.1f",cuadro3se[1,4]-cuadro3se[5,4]), " puntos porcentuales.")
#figura4$Serie[which.max(figura4$Fecha)])
g4 <- ggplot(data=figura4, aes(x=Fecha,y=Serie)) +
ggh4x::stat_difference(aes(ymin = 0, ymax = Serie)) +
geom_line(aes(y = Serie)) +
labs(fill = "Diferencia", y="Puntos porcentuales", x=" ", title=titulog4) +
scale_fill_manual(values=c("#9F2042", "#adcc78"), name="Diferencia") +
theme_bw()
g4
#ggplotly(g4)
fg4 <- cuadro_dif_inc_q1q5 %>%
mutate(Incidencia=fct_reorder(División,Orden)) %>%
mutate_if(is.numeric, ~round(.,2))
g5 <- ggplot(fg4, aes(x=Incidencia, y=`Diferencia de incidencias`)) +
geom_bar(stat="identity", width = 0.5,fill=c("#88b3f7")) +
labs(y = "Variación porcentual",
x = "") +
theme_bw() +
coord_flip()
ggplotly(g5)
cuadro4 %>%
kable(digits=2, col.names = NULL,align = c("r","c","c","c")) %>%
add_header_above(c(".", "Quintil", "Mensual", "Interanual")) %>%
kable_styling()
g5 <- ggplot(data=fgqy, aes(x=Fecha, y=Mensual)) +
geom_line(
aes(
x=Fecha,
color=Quintil
), linewidth=.8) +
scale_color_manual(values=c("#581f4d","#77325f","#923d5b","#c3415b","#dd6868"))+
theme_bw() +
labs(y="Tasa de inflación mensual", x=" ")
ggplotly(g5)
cuadro1deciles %>%
kable(digits=2, col.names = NULL,align = c("r","c","c","c")) %>%
add_header_above(c(".", "Decil", "Mensual", "Interanual")) %>%
kable_styling()
ggdataf4 <- dataf4 %>%
rename("Nivel General" = "NivelGeneral") %>%
rename("Núcleo" = "Nucleo") %>%
drop_na() %>%
pivot_longer(
cols = c("Nivel General", "Núcleo"),
names_to = "Serie",
values_to = "Tasa"
) %>%
mutate(Tasa = round(Tasa*100,2)) %>%
rename("Diferencia" = "Tasa") %>%
dplyr::arrange(Serie, Fecha)
f4 <- ggplot(data = ggdataf4, aes(Diferencia)) +
geom_line(aes(x = Fecha, y = Diferencia, color = Serie), linewidth = 0.8) +
geom_hline(yintercept = 0, linetype = "dotted", color = "lightgrey") +
scale_color_manual(values = c("#009E73", "#D55E00")) +
theme_bw() +
labs(
y = "Puntos porcentuales",
x = "Fecha",
title = "Brechas de inflación por ingresos",
subtitle = "Diferencia entre las tasas de inflación del decil 1 y del decil 10"
)
ggplotly(f4) %>% layout(yaxis = list(hoverformat = '.2f'))
ggdataf9 <- dataf9 %>%
rename("Regional" = "GeoInfIneq") %>%
rename("Deciles de ingreso" = "IncInfIneq") %>%
drop_na() %>%
pivot_longer(
cols = c("Regional", "Deciles de ingreso"),
names_to = "Desigualdad",
values_to = "Tasa"
) %>%
mutate(Tasa = round(Tasa*100,2)) %>%
rename("Diferencia" = "Tasa") %>%
dplyr::arrange(Desigualdad, Fecha)
f9 <- ggplot(data = ggdataf9, aes(Diferencia)) +
geom_line(aes(x = Fecha, y = Diferencia, color = Desigualdad), linewidth = 0.8) +
scale_color_manual(values = c("#009E73", "#D55E00")) +
theme_bw() +
labs(
y = "Puntos porcentuales",
x = "Fecha",
title = "Brechas de inflación",
subtitle = "Diferencia máxima en la tasa de inflación mensual entre regiones y entre deciles"
)
# Convert to plotly and adjust hover format
ggplotly(f9) %>% layout(yaxis = list(hoverformat = '.2f'))
# Para agrandar la letra de los maps
custom_css <- tags$style(HTML("
.leaflet-tooltip {
font-size: 16px !important;
}
"))
# Cargo data al mapa
ar_regiones_gba_data <- ar_regiones_gba %>%
left_join(dataf10f12, by = "codregion")
# Paleta de colores
palette_f10 <- colorNumeric(palette = "viridis", domain = ar_regiones_gba$f10value)
# Configuro el mapa
map_f10 <- leaflet(ar_regiones_gba_data) %>%
addTiles() %>%
addPolygons(color = ~palette_f10(f10value), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.1f",f10value)), HTML)) %>%
setView(lng = -62.0, lat = -37.0, zoom = 4) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f10, values = ~f10value, position = "bottomright", title = "100 = Dic. 2016")
# Plotear el mapa dinamico
htmltools::browsable(tagList(
custom_css,
map_f10
))
# Cargo data al mapa
ar_regiones_gba_data <- ar_regiones_gba %>%
left_join(dataf10f12, by = "codregion")
# Paleta de colores
palette_f12 <- colorNumeric(palette = "viridis", domain = ar_regiones_gba$f12value)
# Configuro el mapa
map_f12 <- leaflet(ar_regiones_gba_data) %>%
addTiles() %>%
addPolygons(color = ~palette_f12(f12value), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.1f",f12value)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f12, values = ~f12value, position = "bottomright", title = "100 = Feb. 2021")
# Plotear el mapa dinamico
htmltools::browsable(tagList(
custom_css,
map_f12
))
ggdataf17ng <- dataf17 %>%
select(Fecha, GeoInfIneqNG, IncInfIneqNG) %>%
drop_na() %>%
rename("Regiones (NG)" = "GeoInfIneqNG") %>%
rename("Ingreso (NG)" = "IncInfIneqNG") %>%
pivot_longer(
cols = c("Regiones (NG)", "Ingreso (NG)"),
names_to = "Desigualdad",
values_to = "Tasa"
) %>%
mutate(Tasa = round(Tasa*100,2)) %>%
rename("Diferencia" = "Tasa") %>%
dplyr::arrange(Desigualdad, Fecha)
ggdataf17nuc <- dataf17 %>%
select(Fecha, GeoInfIneqNUC, IncInfIneqNUC) %>%
drop_na() %>%
rename("Regiones (Núcleo)" = "GeoInfIneqNUC") %>%
rename("Ingreso (Núcleo)" = "IncInfIneqNUC") %>%
pivot_longer(
cols = c("Regiones (Núcleo)", "Ingreso (Núcleo)"),
names_to = "Desigualdad",
values_to = "Tasa"
) %>%
mutate(Tasa = round(Tasa*100,2)) %>%
rename("Diferencia" = "Tasa") %>%
dplyr::arrange(Desigualdad, Fecha)
f17ng <- ggplot(data = ggdataf17ng, aes(Diferencia)) +
geom_line(aes(x = Fecha, y = Diferencia, color = Desigualdad), linewidth = 0.8) +
geom_hline(yintercept = 100, linetype = "dotted", color = "lightgrey") +
scale_color_manual(values = c("#009E73", "#D55E00")) +
theme_bw() +
theme(legend.position = "none") +
labs(
y = "Puntos porcentuales",
x = "Fecha",
title = "Brechas de inflación por ingresos",
subtitle = "Diferencia entre las tasas de inflación interanuales del decil 1 y del decil 10"
) +
ylim(min(c(ggdataf17ng$Diferencia, ggdataf17nuc$Diferencia)),
max(c(ggdataf17ng$Diferencia, ggdataf17nuc$Diferencia)))
#ggplotly(f17ng) %>% layout(yaxis = list(hoverformat = '.4f'))
f17nuc <- ggplot(data = ggdataf17nuc, aes(Diferencia)) +
geom_line(aes(x = Fecha, y = Diferencia, color = Desigualdad), linewidth = 0.8) +
geom_hline(yintercept = 100, linetype = "dotted", color = "lightgrey") +
scale_color_manual(values = c("#006e50", "#9c4603")) +
theme_bw() +
theme(legend.position = "none") +
labs(
y = "Puntos porcentuales",
x = "Fecha",
title = "Brechas de inflación por ingresos",
subtitle = "Diferencia entre las tasas de inflación interanuales del decil 1 y del decil 10"
) +
ylim(min(c(ggdataf17ng$Diferencia, ggdataf17nuc$Diferencia)),
max(c(ggdataf17ng$Diferencia, ggdataf17nuc$Diferencia)))
#ggplotly(f17nuc) %>% layout(yaxis = list(hoverformat = '.1f'))
plotly_f17ng <- ggplotly(f17ng)
plotly_f17nuc <- ggplotly(f17nuc)
fig <- subplot(plotly_f17ng, plotly_f17nuc, nrows = 1, shareX = TRUE, shareY = TRUE, titleX = TRUE, titleY = TRUE) %>%
layout(title = 'Brechas de inflación acumuladas',
margin = list(l = 50, r = 50, b = 50, t = 50, pad = 10),
legend = list(x = 0.5, y = -0.2, orientation = 'h'), # Legend position
hovermode = "compare", # Better hover interaction
annotations = list(
list(x = 0.25, y = 1.06, text = "Nivel General",
showarrow = FALSE, xref='paper', yref='paper',
xanchor='center', yanchor='top', font=list(size=12)),
list(x = 0.75, y = 1.06, text = "Núcleo",
showarrow = FALSE, xref='paper', yref='paper',
xanchor='center', yanchor='top', font=list(size=12))
))
fig
# Trabajo los datos de cada mapa
ggdataf19 <- dataf19 %>%
mutate(f19yoyprom16=f19yoyprom16*100) %>%
mutate(f19yoyprom21=f19yoyprom21*100) %>%
mutate(f19acum16=f19acum16*100)       %>%
mutate(f19acum21=f19acum21*100)       %>%
mutate(d1d10yoyxregion=d1d10yoyxregion*100)
# Cargo data al mapa
ar_regiones_gba_within <- ar_regiones_gba %>%
left_join(ggdataf19, by = "codregion")
# Paleta de colores
palette_f19a <- colorNumeric(palette = "viridis", domain = ar_regiones_gba_within$f19yoyprom16)
palette_f19b <- colorNumeric(palette = "viridis", domain = ar_regiones_gba_within$f19yoyprom21)
palette_f19c <- colorNumeric(palette = "viridis", domain = ar_regiones_gba_within$f19acum16)
palette_f19d <- colorNumeric(palette = "viridis", domain = ar_regiones_gba_within$f19acum21)
palette_f19e <- colorNumeric(palette = "viridis", domain = ar_regiones_gba_within$d1d10yoyxregion)
map19a <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19a(f19yoyprom16), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19yoyprom16)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19a, values = ~f19yoyprom16, position = "bottomright", title = "Dif. YoY")
map19b <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19b(f19yoyprom21), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19yoyprom21)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19b, values = ~f19yoyprom21, position = "bottomright", title = "Dif. YoY")
browsable(
tagList(
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde diciembre de 2016"), # Title for the first map
map19a),
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde febrero de 2021"), # Title for the second map
map19b)
)
)
map19c <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19c(f19acum16), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19acum16)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19c, values = ~f19acum16, position = "bottomright", title = "Dif. Acum.")
map19d <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19d(f19acum21), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19acum21)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19d, values = ~f19acum21, position = "bottomright", title = "Dif. Acum.")
browsable(
tagList(
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde diciembre de 2016"), # Title for the first map
map19a),
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde febrero de 2021"), # Title for the second map
map19b)
)
)
map19c
ggdataf19
map19c <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19c(f19acum16), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19acum16)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19c, values = ~f19acum16, position = "bottomright", title = "Dif. Acum.")
map19d <- leaflet(ar_regiones_gba_within) %>%
addTiles() %>%
addPolygons(color = ~palette_f19d(f19acum21), weight = 1, opacity = 1, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE),
label =  ~lapply(paste("Región:", region, "<br>", "Valor:", sprintf("%.3f",f19acum21)), HTML)) %>%
setView(lng = -62.0, lat = -34.0, zoom = 5) %>%
addScaleBar(position = "bottomleft") %>%
addLegend(pal = palette_f19d, values = ~f19acum21, position = "bottomright", title = "Dif. Acum.")
browsable(
tagList(
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde diciembre de 2016"), # Title for the first map
map19c),
tags$div(style = "display: inline-block; width: 49%;",
tags$h3("Desde febrero de 2021"), # Title for the second map
map19d)
)
)
knitr::opts_chunk$set(echo = TRUE,
warnings = FALSE,
message = FALSE,
engine.path = "C:/Program Files/Stata17/StataMP-64.exe",
root.dir = "C:/Users/mrozada/Dropbox/Personal Stuff"
#root.dir = "C:/Users/fiona/Dropbox/MGR"
)
options(knitr.kable.NA = '')
library("kableExtra")
library("knitr")
library("readxl")
library("tidyverse")
library("htmltools")
library("plotly")
library("viridis")
library("sf")
library("leaflet")
library("ggh4x")
library("rmapshaper")
# Importo los datos:
## Importo fecha: yearactual=anio del informe, mesactual=mes del informe
year_t <- as.numeric(read_excel("./IPCse.xlsx",
sheet = "Cuadro1", range = "c4", col_names = FALSE))
mes_t <- as.numeric(read_excel("./IPCse.xlsx",
sheet = "Cuadro1", range = "k4", col_names = FALSE))
mes_tm1 <- as.numeric(read_excel("./IPCse.xlsx",
sheet = "Cuadro1", range = "j4", col_names = FALSE))
if(mes_t - mes_tm1 == 1){
year_tm1 <- year_t
} else if (mes_t - mes_tm1 == -11){
year_tm1 <- year_t-1
} else {
year_tm1 <- "ERROR EN EL ANIO DEL MES PREVIO"
}
year_tm12 <- year_t - 1
meses <- read_excel(("./IPCse.xlsx"),
sheet = "Cuadro1", range = "r15:r26",
col_names = FALSE)
meses_anterior <- read_excel(("./IPCse.xlsx"),
sheet = "Cuadro1", range = "s15:s26",
col_names = FALSE)
mes_t_abrev <- paste0(str_to_title(substr(meses[mes_t,1],1,3),"."))
text_mes_yoy <-  paste(mes_t_abrev,year_t,"/",mes_t_abrev,year_tm12)
## Importo el cuadro 1 IPCse
cuadro1 <- read_excel(("./IPCse.xlsx"),
sheet = "Cuadro1", range = "E47:L74",
na = "NA")
colnames1 <- colnames(cuadro1)
colnames1[1] <- " "
colnames(cuadro1) <- colnames1
## Importo los datos de la figura 4: tasa interanual q1-q5
figura4 <- read_excel(("./IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "B4:C2000")
# Importo datos cuadro 3 a
## Importo los datos del cuadro3a: tasas q1 a q5
cuadro3se <- read_excel(("./IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "G4:J9")
## Importo los datos del cuadro3b: tasas q1 a q5
cuadro4 <- read_excel(("./IPC por quintiles.xlsx"),
sheet = "Para R",
range = "E5:H10")
## Importo los datos del cuadro 4: diferencia incidencias q1-q5
cuadro_dif_inc_q1q5 <- read_excel(("./IPCse por quintiles.xlsx"),
sheet = "Para R",
range = "N4:P17")
## Importo los datos de la figura 5 : tasas q1 a q5 ultimo año
figuraq1aq5year <- read_excel(("./IPC por quintiles.xlsx"),
sheet = "Para R",
range = "K5:M70")
# Figura 4: diferencia de inflacion interanual entre quintil 1 y quintil 5
colnames(figura4) <- c("Fecha","Serie")
figura4 <- figura4 %>%
na.omit() %>%
mutate(Serie=Serie*100) %>%
mutate_if(is.numeric, ~round(.,2))
# Cuadro 3: Inflacion por quintil
colnames(cuadro3se[,1]) <- " "
# Cuadro 3: Inflacion por quintil
colnames(cuadro4[,1]) <- " "
fgqy <- figuraq1aq5year %>%
mutate_if(is.numeric, ~round(.,2))
shapepath <- "./ProvinciasGBA/AR_RegionesGBA.shp"
ar_regiones_gba <- st_read(shapepath)
ar_regiones_gba <- ms_simplify(ar_regiones_gba, keep = 0.05)
infineqpath <- ("./Data inflation inequality - links funcionan.xlsx")
# Datos de desigualdad por ingresos
dataf9 <-  read_excel(infineqpath, sheet = "Para R", range = "B5:D4000")
dataf4 <-  read_excel(infineqpath, sheet = "Para R", range = "F5:H4000")
dataf5 <-  read_excel(infineqpath, sheet = "Para R", range = "J5:L4000")
# Datos de desigualdad geografica
dataf10f12 <- read_excel(infineqpath, sheet = "Para R", range = "Q5:S11")
dataf17 <- read_excel(infineqpath, sheet = "Para R", range = "U5:Y4000")
dataf19 <- read_excel(infineqpath, sheet = "Para R", range = "AA5:AF11")
# Cuadro simil cuadro 1 pero para deciles
cuadro1deciles <- read_excel(infineqpath, sheet = "Para R", range = "AI5:AL17")
colnames1 <- colnames(cuadro1deciles)
colnames1[1] <- " "
colnames(cuadro1deciles) <- colnames1
# editar el tooltip
tooltip_g4 <- paste0("La diferencia entre la tasa de inflación interanual entre el 20% con menores ingresos y el 20% con mayores ingresos es de ")
titulog4 <- paste0("Última observación: ", meses[mes_t,1], " ", year_t, ".\nLa diferencia en la inflación anual entre los quintiles 1 y 5 fue de ", sprintf("%.1f",cuadro3se[1,4]-cuadro3se[5,4]), " puntos porcentuales.")
#figura4$Serie[which.max(figura4$Fecha)])
g4 <- ggplot(data=figura4, aes(x=Fecha,y=Serie)) +
ggh4x::stat_difference(aes(ymin = 0, ymax = Serie)) +
geom_line(aes(y = Serie)) +
labs(fill = "Diferencia", y="Puntos porcentuales", x=" ", title=titulog4) +
scale_fill_manual(values=c("#9F2042", "#adcc78"), name="Diferencia") +
theme_bw()
g4
#ggplotly(g4)
g5 <- ggplot(data=fgqy, aes(x=Fecha, y=Mensual)) +
geom_line(
aes(
x=Fecha,
color=Quintil
), linewidth=.8) +
scale_color_manual(values=c("#581f4d","#77325f","#923d5b","#c3415b","#dd6868"))+
theme_bw() +
labs(y="Tasa de inflación mensual", x=" ")
ggplotly(g5)
cuadro1deciles %>%
kable(digits=2, col.names = NULL,align = c("r","c","c","c")) %>%
add_header_above(c(".", "Decil", "Mensual", "Interanual")) %>%
kable_styling()
